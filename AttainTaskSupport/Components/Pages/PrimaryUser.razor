@page "/primaryUser"
@layout PageLayout
@using System.ComponentModel.DataAnnotations

<div class="head">
    <h2>Create Primary User</h2>
</div>
<EditForm Model="user" OnInvalidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="fname">Full Name:</label>
        <InputText id="fname" @bind-Value="user.FullName" />
    </div>
    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="user.Email" />
    </div>
    <div>
        <label for="pwd">Password:</label>
        <InputText id="pwd" @bind-Value="user.Password" type="password" />
    </div>
    <div>
        <label for="confirmPwd">Confirm Password:</label>
        <InputText id="confirmPwd" @bind-Value="user.ConfirmPassword" type="password" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>

    @inject NavigationManager NavigationManager

    <input type="button" value="Back" @onclick="goBack" class="button" />

    <button type="submit">Create User</button>

    <input type="button" value="Logout" @onclick="logOut" />

</EditForm>

@code {
    private PrimaryUserModel user = new();

    private void HandleValidSubmit()
    {
        Console.WriteLine($"User: {user.FullName}, {user.Email}");
    }

    public class PrimaryUserModel
    {
        [Required(ErrorMessage = "Full name is required.")]
        public string FullName { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters.")]
        public string Password { get; set; }

        [Required(ErrorMessage = "Confirm Password is required.")]
        [Compare(nameof(Password), ErrorMessage = "Passwords must match.")]
        public string ConfirmPassword { get; set; }
    }

    private void goBack()
    {
        NavigationManager.NavigateTo("/admin");
    }

    private void logOut()
    {
        NavigationManager.NavigateTo("/");
    }
}
